1. 게시판을 관리합니다.
1.1 게시판 관리 모듈은 관리자에게 시삽(sysop)과 같은 역할을 부여합니다.
1.2 관리자는 게시판관리 모듈을 통해 생성된 게시판을 보거나, 등록, 수정, 삭제할 수 있습니다.
1.3 게시판 생성한 후 해당 게시판으로 이동하여 게시물들을 조회하거나 등록, 수정, 삭제할 수 있습니다.

2. 게시판 프로그램 관련 주석입니다.
2.1 게시판은 크게 board 테이블과 board_category 테이블, board_comment 테이블, board_recommend 테이블로 나뉩니다.
2.2 board_category 테이블에 해당 게시판의 이름과 모양새 등을 결정하는 설정 데이터가 들어 있습니다.
2.3 사용자가 글을 쓰게 되면 board 테이블에 해당 데이터가 삽입되며 category 컬럼으로 구분됩니다.
2.4 사용자가 해당 게시판에 댓글을 남기게 되면 board_comment 테이블에 데이터가 삽입되며 board 테이블의 uid 를 참조하게 됩니다. (board_uid 를 fk 로 갖게 됩니다)
2.5 board_comment 테이블에 parent_uid컬럼이 0이 아니라면 댓글에 댓글이 기록되어있는 형태라 할 수 있겠습니다.
2.6 이러한 게시판 글들은 relation이 연결되어 있으므로 물리적으로 삭제 될 시 해당 연결 고리가 끊어질 위험이 있습니다.
2.7 때문에 board_category 테이블에서 카테고리를 삭제하여도 해당 게시판의 글들은 삭제되지 않을 것입니다.
2.8 사용자용 게시판의 경우 카테고리가 없는 게시판에 접속시 '생성되지 않은 게시판입니다.'와 같은 메시지와 함께 리디렉션 되게 됩니다.
2.9 관리자용 게시판의 경우 카테고리가 삭제 되어도 글을 볼 수 있습니다.
2.10 이러한 테이블 설계는 게시물의 이동이 쉽고 검색이 간편하며 테이블을 많이 추가하여 transaction을 많이 일으키지 않습니다.
2.11 그러나 하나의 테이블에 많은 게시물이 들어가므로 대량의 게시물을 관리하기에는 무리가 있습니다.
2.12 만약 단독 테이블로 데이터를 관리하여야 한다면 admin_crud 컨트롤러, crudm 모델을 스캐폴딩 하여 새롭게 개발하는 것이 올바른 개발 방법입니다.

3. appearance(모양새)의 추가
3.1 게시판의 모양새가 사이트 전역적으로 수정 되어야 한다면 css의 구성을 교체하는 것이 올바른 방법입니다.
3.2 모양새가 css 수정이 아닌 html(dom)이 바뀌어야 한다면 board_list, board_retrieve view 파일에 분기 처리를 하면 됩니다.
3.3 &lt;?php if($appearance == 'gallery'):?&gt;와 같은 형태로 되어있는 곳 밑에 새로운 분기 문을 추가하여 새로운 화면 형태를 만들 수 있습니다.
3.4 그리고 board_category 테이블의 appearance 컬럼의 Type enum('basic','notice','gallery')에 새로운 항목을 추가하면 됩니다.
3.5 만약 게시판으로 수정할 수 없는 모양이 나오게 된다면 board 컨트롤러 boardm 모델을 참조하거나 admin_crud 컨트롤러, crudm 모델을 스캐폴딩 하여 개발하는 것이 옳습니다.
3.6 게시판의 유연함과 범용성을 위하여 스킨 기능을 적용하지 않았습니다.

4. 파일첨부
4.1 사용자쪽 파일첨부 기능은 개발되어 있지 않습니다.
4.2 관리자쪽 파일첨부 기능 역시 개발되어 있지 않으므로 파일 첨부를 위해서는 ftp프로그램을 설치하여 admin_attach 디렉터리에 파일을 넣은뒤 링크를 얻고 게시물에 html로 링크를 거는 형태로 동작 시키면됩니다.
4.3 별도의 파일 매니저 프로그램을 제작할 계획은 갖고 있습니다.